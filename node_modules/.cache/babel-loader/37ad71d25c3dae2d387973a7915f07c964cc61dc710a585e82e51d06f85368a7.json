{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: \"Login\",\n  data() {\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.form.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      form: {\n        username: '',\n        password: '',\n        checkPass: ''\n      },\n      // 表单验证， 需要在el-form-item- 元素中增加prop属性\n      rules: {\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        username: [{\n          required: true,\n          message: '账号不可为空',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '密码不可为空',\n          trigger: 'blur'\n        }]\n      },\n      //对话框显示和隐藏\n      dialogVisible: false\n    };\n  },\n  methods: {\n    handleClose: function () {\n      console.log(\"Handle Close，空函数\");\n    },\n    onSubmit(formName) {\n      //为表单绑定验证功能\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.$axios.post('/register', {\n            username: this.form.username,\n            password: this.form.password\n          }).then(response => {\n            if (response.data.code === 20000) {\n              //使用vue-router 路由到指定页面，该方式称之为编程式导航\n              this.$router.push(\"/login\");\n              this.$message.success(response.data.msg);\n            } else {\n              console.log(response.data);\n              this.$message.error(this.form.username + \"已被注册\");\n            }\n          });\n        } else {\n          this.dialogVisible = true;\n          return false;\n        }\n      });\n    }\n  },\n  created() {\n    let _this = this;\n    console.log('this.$route' + this.$route.query);\n    console.log('this.$route.query.id' + this.$route.query.id);\n  }\n};","map":{"version":3,"names":["axios","name","data","validatePass2","rule","value","callback","Error","form","password","username","checkPass","rules","validator","trigger","required","message","dialogVisible","methods","handleClose","console","log","onSubmit","formName","$refs","validate","valid","$axios","post","then","response","code","$router","push","$message","success","msg","error","created","_this","$route","query","id"],"sources":["src/views/UpdateUser.vue"],"sourcesContent":["<template>\n    <div>\n        <el-form ref=\"loginForm\" :model=\"form\" :rules=\"rules\" label width=\" 80px\" class=\"login-box\">\n            <h3 class=\"login-title\">修改</h3>\n            <el-form-item label=\"账号\" prop=\"username\">\n                <el-input type=\"text\" placeholder=\" 请输入账号\" v-model=\"form.username\"/>\n            </el-form-item>\n            <el-form-item label=\"密码\" prop=\"password\">\n                <el-input type=\"password\" placeholder=\" 请输入密码\" v-model=\" form.password\"/>\n            </el-form-item>\n            <el-form-item label=\"确认密码\" prop=\"checkPass\">\n                <el-input type=\"password\" placeholder=\" 请确认密码\" v-model=\"form.checkPass\" />\n            </el-form-item>\n            <el-form-item>\n                <el-button type=\"primary\" v-on:click=\"onSubmit('loginForm')\">修改</el-button>\n            </el-form-item>\n        </el-form>\n        <el-dialog\n                title=\"温馨提示\"\n                :visible.sync=\"dialogVisible\"\n                width=\"30%\"\n                :before-close=\"handleClose\">\n            <span>请输入账号和密码</span>\n            <span slot=\"footer\" class=\"dialog-footer\">\n<el-button type=\"primary\" @click=\"dialogVisible = false\">确 定</el-button>\n      </span>\n        </el-dialog>\n    </div>\n</template>\n<script>\nimport axios from 'axios'\n    export default {\n        name: \"Login\",\n        data() {\n            var validatePass2 = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请再次输入密码'));\n                } else if (value !== this.form.password) {\n                    callback(new Error('两次输入密码不一致!'));\n                } else {\n                    callback();\n                }\n            };\n            return {\n                form: {\n                    username: '',\n                    password: '',\n                    checkPass: '',\n                },\n// 表单验证， 需要在el-form-item- 元素中增加prop属性\n                rules: {\n                    checkPass: [{validator: validatePass2, trigger: 'blur'}],\n                    username: [{required: true, message: '账号不可为空', trigger: 'blur'}],\n                    password: [{required: true, message: '密码不可为空', trigger: 'blur'}]\n                },\n//对话框显示和隐藏\n                dialogVisible: false\n            }\n        },\n        methods: {\n            handleClose: function () {\n                console.log(\"Handle Close，空函数\");\n            },\n            onSubmit(formName) {\n                //为表单绑定验证功能\n                this.$refs [formName].validate((valid) => {\n                    if (valid) {\n                        this.$axios.post('/register', {\n                            username: this.form.username,\n                            password: this.form.password\n                        })\n                            .then(response => {\n                                if(response.data.code===20000){\n                                    //使用vue-router 路由到指定页面，该方式称之为编程式导航\n                                    this.$router.push(\"/login\");\n                                    this.$message.success(response.data.msg)\n                                }else{\n                                    console.log(response.data);\n                                    this.$message.error(this.form.username+\"已被注册\")\n                                }\n                            })\n\n\n                    } else {\n                        this.dialogVisible = true;\n                        return false;\n                    }\n                });\n            },\n\n        },\n        created() {\n           let _this = this;\n           console.log('this.$route'+this.$route.query)\n           console.log('this.$route.query.id'+this.$route.query.id)\n           \n        }\n    }\n</script>   \n<style scoped>\n    .el-input {\n        width: 80%;\n    }\n\n    .el-button {\n        width: 100%;\n    }\n\n    .el-form-item {\n        margin-bottom: 22px;\n        }\n    .login-box {\n        border: 1px solid #DCDFE6;\n        width: 350px;\n        margin: 50px auto;\n        padding: 35px 35px 15px 35px;\n        border-radius: 5px;\n        -webkit-border-radius: 5px;\n        -moz-border-radius: 5px;\n        box-shadow: 0 0 25px #909399;\n    }\n\n    .login-title {\n        text-align: center;\n        margin: 0 auto 40px auto;\n        color: #303133;\n    }\n</style>\n"],"mappings":";AA8BA,OAAAA,KAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA,IAAAC,aAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,IAAA,CAAAC,QAAA;QACAH,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAE,IAAA;QACAE,QAAA;QACAD,QAAA;QACAE,SAAA;MACA;MACA;MACAC,KAAA;QACAD,SAAA;UAAAE,SAAA,EAAAV,aAAA;UAAAW,OAAA;QAAA;QACAJ,QAAA;UAAAK,QAAA;UAAAC,OAAA;UAAAF,OAAA;QAAA;QACAL,QAAA;UAAAM,QAAA;UAAAC,OAAA;UAAAF,OAAA;QAAA;MACA;MACA;MACAG,aAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA,WAAAA,CAAA;MACAC,OAAA,CAAAC,GAAA;IACA;IACAC,SAAAC,QAAA;MACA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,MAAA,CAAAC,IAAA;YACAlB,QAAA,OAAAF,IAAA,CAAAE,QAAA;YACAD,QAAA,OAAAD,IAAA,CAAAC;UACA,GACAoB,IAAA,CAAAC,QAAA;YACA,IAAAA,QAAA,CAAA5B,IAAA,CAAA6B,IAAA;cACA;cACA,KAAAC,OAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA,CAAAL,QAAA,CAAA5B,IAAA,CAAAkC,GAAA;YACA;cACAhB,OAAA,CAAAC,GAAA,CAAAS,QAAA,CAAA5B,IAAA;cACA,KAAAgC,QAAA,CAAAG,KAAA,MAAA7B,IAAA,CAAAE,QAAA;YACA;UACA;QAGA;UACA,KAAAO,aAAA;UACA;QACA;MACA;IACA;EAEA;EACAqB,QAAA;IACA,IAAAC,KAAA;IACAnB,OAAA,CAAAC,GAAA,sBAAAmB,MAAA,CAAAC,KAAA;IACArB,OAAA,CAAAC,GAAA,+BAAAmB,MAAA,CAAAC,KAAA,CAAAC,EAAA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}