{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      form: {\n        username: '',\n        email: '',\n        avatar: ''\n      }\n    };\n  },\n  created() {\n    this.fetchProfile();\n  },\n  methods: {\n    fetchProfile() {\n      const userId = this.$route.query.id;\n      axios.get(`http://localhost:8081/getUserById?id=${userId}`).then(response => {\n        const user = response.data.data;\n        this.form.username = user.username;\n        this.form.email = user.email;\n        this.form.avatar = user.avatar;\n      }).catch(error => {\n        this.$message.error('获取用户详情失败');\n      });\n    },\n    updateProfile() {\n      axios.post('http://localhost:8088/updateUserProfile', this.form).then(response => {\n        this.$message.success('保存成功');\n      }).catch(error => {\n        this.$message.error('保存失败');\n      });\n    },\n    handleAvatarSuccess(res, file) {\n      this.form.avatar = URL.createObjectURL(file.raw);\n    },\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === 'image/jpeg';\n      const isPNG = file.type === 'image/png';\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isJPG && !isPNG) {\n        this.$message.error('上传头像图片只能是 JPG 或 PNG 格式!');\n      }\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n      return (isJPG || isPNG) && isLt2M;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","form","username","email","avatar","created","fetchProfile","methods","userId","$route","query","id","get","then","response","user","catch","error","$message","updateProfile","post","success","handleAvatarSuccess","res","file","URL","createObjectURL","raw","beforeAvatarUpload","isJPG","type","isPNG","isLt2M","size"],"sources":["src/views/profile.vue"],"sourcesContent":["<!-- <template>\r\n    <div class=\"profile\">\r\n      <h2>个人中心</h2>\r\n      <el-form :model=\"form\" label-width=\"80px\">\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"form.username\" disabled />\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\">\r\n          <el-input v-model=\"form.email\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"头像\">\r\n          <el-upload\r\n            class=\"avatar-uploader\"\r\n            action=\"/api/upload/avatar\"\r\n            :show-file-list=\"false\"\r\n            :on-success=\"handleAvatarSuccess\"\r\n            :before-upload=\"beforeAvatarUpload\">\r\n            <img v-if=\"form.avatar\" :src=\"form.avatar\" class=\"avatar\">\r\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"updateProfile\">保存</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {\r\n          username: '',\r\n          email: '',\r\n          avatar: ''\r\n        },\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchProfile();\r\n    },\r\n    methods: {\r\n      fetchProfile() {\r\n        axios.get('/api/user/profile').then(response => {\r\n          this.form = response.data;\r\n        });\r\n      },\r\n      updateProfile() {\r\n        axios.post('/api/user/profile', this.form).then(response => {\r\n          this.$message.success('保存成功');\r\n        });\r\n      },\r\n      handleAvatarSuccess(res, file) {\r\n        this.form.avatar = URL.createObjectURL(file.raw);\r\n      },\r\n      beforeAvatarUpload(file) {\r\n        const isJPG = file.type === 'image/jpeg';\r\n        const isPNG = file.type === 'image/png';\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n  \r\n        if (!isJPG && !isPNG) {\r\n          this.$message.error('上传头像图片只能是 JPG 或 PNG 格式!');\r\n        }\r\n        if (!isLt2M) {\r\n          this.$message.error('上传头像图片大小不能超过 2MB!');\r\n        }\r\n        return (isJPG || isPNG) && isLt2M;\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .profile {\r\n    padding: 20px;\r\n  }\r\n  .avatar-uploader {\r\n    display: inline-block;\r\n  }\r\n  .avatar-uploader .el-upload {\r\n    border: 1px dashed #d9d9d9;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n  .avatar-uploader .el-upload:hover {\r\n    border-color: #409EFF;\r\n  }\r\n  .avatar-uploader-icon {\r\n    font-size: 28px;\r\n    color: #8c939d;\r\n    width: 178px;\r\n    height: 178px;\r\n    line-height: 178px;\r\n    text-align: center;\r\n  }\r\n  .avatar {\r\n    width: 178px;\r\n    height: 178px;\r\n    display: block;\r\n  }\r\n  </style>\r\n   -->\r\n\r\n   <template>\r\n    <div class=\"profile\">\r\n        <h2>个人中心</h2>\r\n        <el-form :model=\"form\" label-width=\"80px\">\r\n            <el-form-item label=\"用户名\">\r\n                <el-input v-model=\"form.username\" disabled />\r\n            </el-form-item>\r\n            <el-form-item label=\"邮箱\">\r\n                <el-input v-model=\"form.email\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"头像\">\r\n                <el-upload\r\n                    class=\"avatar-uploader\"\r\n                    action=\"/api/upload/avatar\"\r\n                    :show-file-list=\"false\"\r\n                    :on-success=\"handleAvatarSuccess\"\r\n                    :before-upload=\"beforeAvatarUpload\">\r\n                    <img v-if=\"form.avatar\" :src=\"form.avatar\" class=\"avatar\">\r\n                    <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n                </el-upload>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"updateProfile\">保存</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            form: {\r\n                username: '',\r\n                email: '',\r\n                avatar: ''\r\n            }\r\n        };\r\n    },\r\n    created() {\r\n        this.fetchProfile();\r\n    },\r\n    methods: {\r\n        fetchProfile() {\r\n            const userId = this.$route.query.id;\r\n            axios.get(`http://localhost:8081/getUserById?id=${userId}`).then(response => {\r\n                const user = response.data.data;\r\n                this.form.username = user.username;\r\n                this.form.email = user.email;\r\n                this.form.avatar = user.avatar;\r\n            }).catch(error => {\r\n                this.$message.error('获取用户详情失败');\r\n            });\r\n        },\r\n        updateProfile() {\r\n            axios.post('http://localhost:8088/updateUserProfile', this.form).then(response => {\r\n                this.$message.success('保存成功');\r\n            }).catch(error => {\r\n                this.$message.error('保存失败');\r\n            });\r\n        },\r\n        handleAvatarSuccess(res, file) {\r\n            this.form.avatar = URL.createObjectURL(file.raw);\r\n        },\r\n        beforeAvatarUpload(file) {\r\n            const isJPG = file.type === 'image/jpeg';\r\n            const isPNG = file.type === 'image/png';\r\n            const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n            if (!isJPG && !isPNG) {\r\n                this.$message.error('上传头像图片只能是 JPG 或 PNG 格式!');\r\n            }\r\n            if (!isLt2M) {\r\n                this.$message.error('上传头像图片大小不能超过 2MB!');\r\n            }\r\n            return (isJPG || isPNG) && isLt2M;\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.profile {\r\n    padding: 20px;\r\n}\r\n.avatar-uploader {\r\n    display: inline-block;\r\n}\r\n.avatar-uploader .el-upload {\r\n    border: 1px dashed #d9d9d9;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n    border-color: #409EFF;\r\n}\r\n.avatar-uploader-icon {\r\n    font-size: 28px;\r\n    color: #8c939d;\r\n    width: 178px;\r\n    height: 178px;\r\n    line-height: 178px;\r\n    text-align: center;\r\n}\r\n.avatar {\r\n    width: 178px;\r\n    height: 178px;\r\n    display: block;\r\n}\r\n</style>\r\n"],"mappings":"AAuIA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,QAAA;QACAC,KAAA;QACAC,MAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,YAAA;EACA;EACAC,OAAA;IACAD,aAAA;MACA,MAAAE,MAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAC,EAAA;MACAZ,KAAA,CAAAa,GAAA,yCAAAJ,MAAA,IAAAK,IAAA,CAAAC,QAAA;QACA,MAAAC,IAAA,GAAAD,QAAA,CAAAd,IAAA,CAAAA,IAAA;QACA,KAAAC,IAAA,CAAAC,QAAA,GAAAa,IAAA,CAAAb,QAAA;QACA,KAAAD,IAAA,CAAAE,KAAA,GAAAY,IAAA,CAAAZ,KAAA;QACA,KAAAF,IAAA,CAAAG,MAAA,GAAAW,IAAA,CAAAX,MAAA;MACA,GAAAY,KAAA,CAAAC,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;IACAE,cAAA;MACApB,KAAA,CAAAqB,IAAA,iDAAAnB,IAAA,EAAAY,IAAA,CAAAC,QAAA;QACA,KAAAI,QAAA,CAAAG,OAAA;MACA,GAAAL,KAAA,CAAAC,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;IACAK,oBAAAC,GAAA,EAAAC,IAAA;MACA,KAAAvB,IAAA,CAAAG,MAAA,GAAAqB,GAAA,CAAAC,eAAA,CAAAF,IAAA,CAAAG,GAAA;IACA;IACAC,mBAAAJ,IAAA;MACA,MAAAK,KAAA,GAAAL,IAAA,CAAAM,IAAA;MACA,MAAAC,KAAA,GAAAP,IAAA,CAAAM,IAAA;MACA,MAAAE,MAAA,GAAAR,IAAA,CAAAS,IAAA;MAEA,KAAAJ,KAAA,KAAAE,KAAA;QACA,KAAAb,QAAA,CAAAD,KAAA;MACA;MACA,KAAAe,MAAA;QACA,KAAAd,QAAA,CAAAD,KAAA;MACA;MACA,QAAAY,KAAA,IAAAE,KAAA,KAAAC,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}